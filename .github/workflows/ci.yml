name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:7
        ports:
          - 27017:27017
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        cd server && npm ci
        cd ../client && npm ci
    
    - name: Lint server
      run: cd server && npm run lint
    
    - name: Lint client  
      run: cd client && npm run lint
    
    - name: Test server
      run: cd server && npm test
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/form-extractor-test
        JWT_SECRET: test-secret
    
    - name: Test client
      run: cd client && npm test
    
    - name: Build server
      run: cd server && npm run build
    
    - name: Build client
      run: cd client && npm run build

  docker:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker images
      run: |
        docker build -t form-extractor-server ./server
        docker build -t form-extractor-client ./client
    
    - name: Test Docker containers
      run: |
        docker-compose up -d
        sleep 30
        docker-compose down